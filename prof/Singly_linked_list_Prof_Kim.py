# -*- coding: utf-8 -*-
"""SimplyLinkedList.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Wc_tte5xagpn5_bj3vLr6h6LPsMtcPrD
"""

class Node:
  
  def __init__(self, data):
    self.data = data
    self.next = None
    
  def get_data(self):
    return self.data
  
  def get_next(self):
    return self.next
  
  def set_next(self, next):
    self.next = next
    
class Simply_linked_list:
  
  def __init__(self):
    self.header = None
    self.tail = None
    self.size = 0

  def append(self, data):
    new_node = Node(data)
    self.size += 1
    if self.header is None:
      self.header = new_node
    else:
      self.tail.set_next(new_node)
    self.tail = new_node
    
  def print_list(self):
    print(">> current list")
    node = self.header
    while node is not None:
      print(node.get_data())
      node = node.get_next()
    print(">>>>>>>>>>>>>>>>")
      
  def get_at(self, index):
    if index >= self.size:
      return None
    else:
      node = self.header      
      for i in range (0, index):
        node = node.get_next()
      return node
  
  def search(self, data):
    node = self.header
    while node is not None:
      if node.get_data() == data:
        return node
      node = node.get_next()
    return node
  
  def delete_at(self, index):
    if index >= self.size:
      pass
    else:
      prev = None
      current = self.header     
      for i in range (0, index):
        prev = current;
        current = current.get_next()
      if current == self.header:
        self.header = current.get_next()
      else:
        prev.set_next(current.get_next())
      if current == self.tail:
        self.tail = prev
      self.size -= 1
        
sll = Simply_linked_list()
sll.append("Apple")
sll.append("Kiwi")
sll.append("Banana")
sll.print_list()

index = 1
node = sll.get_at(index)
if node is not None:
  print("Get at (" + str(index) + ") result: " + node.get_data())
else:
  print("index error with the index " + index)
index = 2  
node = sll.get_at(index)
if node is not None:
  print("Get at (" + str(index) + ") result: " + node.get_data())
else:
  print("index error with the index " + index)
print("-------------------------------------------")
  
data = "Banana"
node = sll.search(data)
msg = "Search result with (" + data + "): "
if node is not None:
  print(msg + "We have it!")
else:
  print(msg + "We don't have it!")
data = "Melon"
node = sll.search(data)
msg = "Search result with (" + data + "): "
if node is not None:
  print(msg + "We have it!")
else:
  print(msg + "We don't have it!") 
print("-------------------------------------------")

sll.delete_at(1)
sll.print_list()
sll.append("Orange")
sll.print_list()
sll.delete_at(0)
sll.print_list()
sll.delete_at(1)
sll.print_list()
